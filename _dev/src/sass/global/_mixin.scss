// ==================================================
// Mixin
// ==================================================
@use "sass:math";
@forward "../animate";

// --------------------------------------------------
// 値計算
// --------------------------------------------------
// ピクセル→パーセント変換
@function x-pxper($size, $parent-size) {
	@return x-round-decimal(calc($size / $parent-size * 100), 2) + unquote("%");
}

// Round (四捨五入)
@function x-round-decimal($number, $digits: 0) {
	@return x-to-fixed($number, $digits, "round");
}

// Ceil (切り上げ)
@function x-ceil-decimal($number, $digits: 0) {
	@return x-to-fixed($number, $digits, "ceil");
}

// Floor (切り捨て)
@function x-floor-decimal($number, $digits: 0) {
	@return x-to-fixed($number, $digits, "floor");
}

@function x-to-fixed($number, $digits: 0, $round: "round") {
	$n: 1;

	// $number must be a number
	@if type-of($number) != number {
		@warn '#{ $number } is not a number.';
		@return $number;
	}

	// $digits must be a unitless number
	@if type-of($digits) != number {
		@warn '#{ $digits } is not a number.';
		@return $number;
	} @else if not unitless($digits) {
		@warn '#{ $digits } has a unit.';
		@return $number;
	}

	@for $i from 1 through $digits {
		$n: $n * 10;
	}

	@if $round == "round" {
		@return calc(round($number * $n) / $n);
	} @else if $round == "ceil" {
		@return calc(ceil($number * $n) / $n);
	} @else if $round == "floor" {
		@return calc(floor($number * $n) / $n);
	} @else {
		@warn '#{ $round } is undefined keyword.';
		@return $number;
	}
}

// vwに変換
@function pxtovw($value, $device) {
	@if $device == "pc" {
		@return math.div($value * 100, 1920px) * 1vw;
	}

	@if $device == "sp" {
		@return math.div($value * 100, 375px) * 1vw;
	}
}

// css clamp関数
@function fluid($min-size, $max-size, $min-breakpoint, $max-breakpoint, $unit: vw) {
	$slope: math.div($max-size - $min-size, $max-breakpoint - $min-breakpoint);
	$slope-to-unit: $slope * 100;
	$intercept: $min-size - $slope * $min-breakpoint;
	$min-size: $min-size;
	$max-size: $max-size;

	@return clamp(#{$min-size}, #{$intercept} + #{$slope-to-unit}#{$unit}, #{$max-size});
}

// --------------------------------------------------
// レイアウト
// --------------------------------------------------
// absolute中央寄せ
@mixin x-image-absolute-center($image, $retio: 1) {
	position: absolute;
	top: 50%;
	left: 50%;
	width: image-width($image) * $retio;
	height: image-height($image) * $retio;
	margin-top: image-height($image) * $retio / 2 * -1;
	margin-left: image-width($image) * $retio / 2 * -1;
}

@mixin l-desktop {
	@media (min-width: $screen-lg-min) {
		@content;
	}
}

@mixin xl-desktop {
	@media (min-width: 1500px) {
		@content;
	}
}

@mixin xxl-desktop {
	@media (min-width: 1700px) {
		@content;
	}
}

@mixin desktop {
	@media (min-width: $screen-md-min) {
		@content;
	}
}

@mixin mobile {
	@media (max-width: $screen-md-max) {
		@content;
	}
}

@mixin small-mobile {
	@media (max-width: 374px) {
		@content;
	}
}

@mixin tablet {
	@media (min-width: $screen-sm-min) {
		@content;
	}
}

@mixin onlyie {
	@media screen and (min-width: 0\0) {
		@content;
	}
}

@mixin edge {
	@supports (-ms-ime-align: auto) {
		@content;
	}
}

@mixin onlytablet {
	@media screen and (min-width: 768px) and (max-width: 1024px) {
		@content;
	}
}

@mixin frame-border {
	border-color: rgba($color-gray, 0.2);
	border-style: solid;
	border-width: 30px;

	@include desktop {
		border-width: 45px;
	}

	@include l-desktop {
		border-width: 60px;
	}
}

// @mixin ieonly {
//     @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
//         @content;
//     }
// }

@mixin ieonly {
	@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
		@content;
	}
}

@mixin iegriditem($column) {
	$row: 1;
	$c: 1;

	@for $i from 1 through 100 {
		@if $c > $column {
			$c: 1;
		}
		&:nth-child(#{$column}n + #{$i}) {
			grid-row: $row;
			grid-column: $c;

			$c: $c + 1;

			@if $i % $column == 0 {
				$row: $row + 1;
			}
		}
	}
}

@mixin heading01 {
	font-size: 41px;
	line-height: 1.22;
	color: rgb(166 155 146);

	@media (min-width: $screen-md-min) {
		font-size: 60px;
		line-height: 1.5;
	}
}
